<?xml version="1.0"?>
<doc>
  <members>
    <member name="T:std.initializer_list`1">
      <summary></summary>
      <typeparam name="_Elem"></typeparam>
    </member>
    <member name="std.initializer_list`1.value_type">
      <summary></summary>
    </member>
    <member name="std.initializer_list`1.reference">
      <summary></summary>
    </member>
    <member name="std.initializer_list`1.const_reference">
      <summary></summary>
    </member>
    <member name="std.initializer_list`1.size_type">
      <summary></summary>
    </member>
    <member name="std.initializer_list`1.iterator">
      <summary></summary>
    </member>
    <member name="std.initializer_list`1.const_iterator">
      <summary></summary>
    </member>
    <member name="M:std.initializer_list`1.#ctor">
      <summary></summary>
    </member>
    <member name="M:std.initializer_list`1.#ctor(const _Elem,const _Elem)">
      <summary></summary>
      <param name="_First_arg"></param>
      <param name="_Last_arg"></param>
    </member>
    <member name="M:std.initializer_list`1.begin const">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:std.initializer_list`1.end const">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:std.initializer_list`1.size const">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:std.begin``1(std.initializer_list{_Elem})">
      <summary></summary>
      <typeparam name="_Elem"></typeparam>
      <param name="_Ilist"></param>
      <returns></returns>
    </member>
    <member name="M:std.end``1(std.initializer_list{_Elem})">
      <summary></summary>
      <typeparam name="_Elem"></typeparam>
      <param name="_Ilist"></param>
      <returns></returns>
    </member>
  </members>
</doc>
